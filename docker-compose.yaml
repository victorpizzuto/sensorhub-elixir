services:

  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - dns

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "15675:15675"
      - "1883:1883"
      - "15692:15692"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=username
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - ./docker_config/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins:ro
      - ./docker_config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./docker_config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    networks:
      - dns

  minio:
    image: bitnami/minio
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: username
      MINIO_ROOT_PASSWORD: password
      MINIO_SERVER_HOST: localhost
      MINIO_SCHEME: http
      MINIO_API_CORS_ALLOW_ORIGIN: '*'

  mongodb:
    image: mongo:8
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: username
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - dns

  nodered:
    image: nodered/node-red-docker:v8
    ports:
      - "1880:1880"
    volumes:
      - ./docker_config/nodered/data:/data
    networks:
      - dns

networks:
  dns:
    driver: bridge
